/* */ 
PARSE ARG 'aar=' aar '&month=' month '&jobbid=' id '&scale=' scale

filebase="web-root:verksted/"
Options results

checkport:
if ~show(ports, "AMIFIG.0") then do
 address command 'run >nil: run sys:applications/amifig/AmiFIG3.1'
 call delay(250)
end
address("AMIFIG.0")

zoom=100


Clear "test.fig"
SetLineWidth 1
SetJoinStyle 1
SetCapStyle 1
SetDepth 10
setzoomscale zoom
setbasesystem metric
/*SetUnfilled*/
SetPenColor 0

SetBaseSystem metric

jobbfile="web-root:verksted/datafiler_jobber/"aar"/"month"/jobb_id."id""

if aar='tilbud' then do
jobbfile="web-root:verksted/datafiler_jobber_temp/jobb_id."month""
end


call open(dat,jobbfile,'R')
garbage=readln(dat)
dato=readln(dat)
kundenr=readln(dat)
merk=readln(dat)
if merk="" then merk=" "
levuke=readln(dat)
garbage=readln(dat)


do until eof(dat)
antall=readln(dat)
d_bredde=readln(dat)
d_hoyde=readln(dat)
malenr=readln(dat)
typen=readln(dat)
type=left(typen,1)
subtype=right(typen,1)
if subtype=type then subtype=1
inndel_b=readln(dat)
inndel_h=readln(dat)
truter=inndel_b*inndel_h*antall
ramme=readln(dat)
profil=readln(dat)
merknad=readln(dat)
if merknad="" then merknad=" "
garbage=readln(dat) 
    if garbage="#andre ting" then do
     hengsler=readln(dat)
     klips=readln(dat)
     maling=readln(dat)
     impreg=readln(dat)
     dill=readln(dat)
    end



if profil=0 then do
SetLineWidth 1
end

if profil=1 then do
SetLineWidth 1
end



if scale="" then scale=30

/*
if d_bredde<20 then scale=10
if d_hoyde<20 then scale=10
*/

bredde=d_bredde/scale
hoyde=d_hoyde/scale



buehoyde=10/scale
if d_hoyde<20 then buehoyde=6/scale 
if d_bredde<20 then buehoyde=6/scale 

buetopp=5/scale

if d_hoyde<20 then buetopp=2/scale 
if d_bredde<20 then buetopp=2/scale 


Clear "test.fig"

if ~exists(filebase'tmp/img_'typen'_'d_bredde'x'd_hoyde'_'inndel_b'x'inndel_h'.jpg') then do

if type=A then call draw_a
if type=B then call draw_b
if type=C then call draw_c
if type=D then call draw_d
if type=E then call draw_e
if type=G then call draw_g
if type=K then call draw_k
if type=I then call draw_i
if type=J then call draw_j
if type=N then call draw_n
if type=M then call draw_m
if type=H then call draw_h
if type=O then call draw_o


if type=L then do
 if inndel_b<3 then call draw_g
 if inndel_b>3 then call draw_b
end

if type=F then call draw_a   



/*(bredde*32)+2 (hoyde*32)+2*/
saveb=((bredde*32)*(zoom/100))+2
saveh=((hoyde*32)*(zoom/100))+2

ExportFile filebase'tmp/img_'typen'_'d_bredde'x'd_hoyde'_'inndel_b'x'inndel_h'.iff' iff left top saveb saveh
address command 'c:jpegtool force quiet 'filebase'tmp/img_'typen'_'d_bredde'x'd_hoyde'_'inndel_b'x'inndel_h'.iff 'filebase'tmp/img_'typen'_'d_bredde'x'd_hoyde'_'inndel_b'x'inndel_h'.jpg'
address command 'run >nil: delete 'filebase'tmp/img_'typen'_'d_bredde'x'd_hoyde'_'inndel_b'x'inndel_h'.iff'
end

end
call close(dat)

exit



/*************************************************************************/
draw_a:
ruter=inndel_h-1
if inndel_h=1 then ruter=inndel_h
call draw_frame
do until ruter=0
StartPolyline 0.02 hoyde/inndel_h*ruter
EndLine bredde hoyde/inndel_h*ruter
ruter=ruter-1
end

ruter=inndel_b-1
if inndel_b=1 then ruter=inndel_b

do until ruter=0
StartPolyline bredde/inndel_b*ruter 0.02
EndLine bredde/inndel_b*ruter hoyde
ruter=ruter-1
end

return
/*************************************************************************/
draw_n:
ruter=inndel_h-1
buer=inndel_b
if inndel_h=1 then ruter=inndel_h
call draw_frame


do until ruter=0
StartPolyline 0.02 hoyde/inndel_h*ruter
EndLine bredde hoyde/inndel_h*ruter
ruter=ruter-1
end

ruter=inndel_b-1
if inndel_b=1 then ruter=inndel_b

do until ruter=0
StartPolyline bredde/inndel_b*ruter buehoyde
EndLine bredde/inndel_b*ruter hoyde
ruter=ruter-1
end


mellom=(bredde/inndel_b)

bue_slutt=0

midtbue=mellom/2

do until buer=0
bue_start=bue_slutt
bue_slutt=(bue_start+mellom)

DrawArc bue_start buehoyde bue_slutt-midtbue buetopp bue_slutt buehoyde

buer=buer-1
end

return
/*************************************************************************/

draw_j:
call draw_frame

if inndel_b>1 then call liggende
if inndel_h>1 then call staaende

ruuter=inndel_b+inndel_h

if ruuter=2 then call singel

return


singel:
ruter=inndel_b
inndeling=bredde/ruter

startpk=0.02
endpk=inndeling

 StartPolyline startpk 0.02
 EndLine       endpk hoyde

 StartPolyline startpk hoyde
 EndLine       endpk 0.02

return


liggende:
ruter=inndel_b
inndeling=bredde/ruter

startpk=0.02
endpk=inndeling

do until ruter=1
 StartPolyline startpk 0.02
 EndLine       endpk hoyde

 StartPolyline startpk hoyde
 EndLine       endpk 0.02

ruter=ruter-1
startpk=endpk
endpk=endpk+inndeling

 StartPolyline startpk 0.02
 EndLine       endpk hoyde

 StartPolyline startpk hoyde
 EndLine       endpk 0.02

end
return

staaende:
ruter=inndel_h
inndeling=hoyde/ruter


startpk=0.02
endpk=inndeling

bb=bredde


do until ruter=1
 StartPolyline 0.02 startpk
 EndLine       bb endpk

 StartPolyline 0.02 endpk
 EndLine       bb startpk

ruter=ruter-1
startpk=endpk
endpk=endpk+inndeling

 StartPolyline 0.02 startpk
 EndLine       bb endpk

 StartPolyline 0.02 endpk
 EndLine       bb startpk

end
return

/*************************************************************************/
draw_d:
call draw_frame
ruter=inndel_h-1
midtstokk=5/scale

if inndel_b>2 then call d3rut
if inndel_b=2|inndel_b=1 then call dvanlig

return

dvanlig:
midtstokk=5/scale
p1=(bredde-midtstokk)/2
p2=p1+midtstokk


if inndel_b>1 then do
/*midtstokk*/
StartPolyline p1 0.02
EndLine p1 hoyde
StartPolyline p2 0.02
EndLine p2 hoyde
end

if inndel_b=1 then do
p1=(bredde-0.02)/2
p2=p1
end

if inndel_h>1 then do
/*breddepinner*/
StartPolyline 0.02 (hoyde-midtstokk)/3
EndLine p1 (hoyde-midtstokk)/3
StartPolyline p2 (hoyde-midtstokk)/3
EndLine bredde (hoyde-midtstokk)/3

StartPolyline 0.02 ((hoyde-midtstokk)/3)+midtstokk
EndLine p1 ((hoyde-midtstokk)/3)+midtstokk
StartPolyline p2 ((hoyde-midtstokk)/3)+midtstokk
EndLine bredde ((hoyde-midtstokk)/3)+midtstokk
end
return

d3rut:
ant_pinner=inndel_b-1
mellom=(bredde-(midtstokk*ant_pinner)) / inndel_b
p1=0.02
p2=0.02
h1=0.02
h2=0.02

ant_pinner=inndel_h-1
mellom_h=(hoyde-(midtstokk*ant_pinner)) / 3

/*********************HOYDE PINNER*************************/
ruter=inndel_b

do until ruter=0
p1=p2+mellom
p2=p1+midtstokk

 StartPolyline p1 0.02
 EndLine p1 hoyde
 StartPolyline p2 0.02
 EndLine p2 hoyde
ruter=ruter-1

ruter_h=inndel_h-1

if inndel_h>1 then do
 do until ruter_h=0
 ps=p1-mellom

 h1=h2+mellom_h
 h2=h1+midtstokk

 StartPolyline ps h1
 EndLine p1 h1
 StartPolyline ps h2
 EndLine p1 h2

 ruter_h=ruter_h-1
 end
end
 h1=0.02
 h2=0.02

end
return

/*************************************************************************/

draw_h:
call draw_frame
ruter=inndel_h-1
midtstokk=5/scale

if inndel_b=1 then do
p1=0.02
p2=bredde

/* midtstokk */
mellom_h=(hoyde-(midtstokk*2))/3

StartPolyline p1 mellom_h
EndLine p2 mellom_h
StartPolyline p1 mellom_h+midtstokk
EndLine p2 mellom_h+midtstokk

profil_h=mellom_h/2
StartPolyline p1 profil_h
EndLine p2 profil_h
StartPolyline bredde/2 0.02
EndLine bredde/2 mellom_h

return

end


if inndel_b>2 then call h3rut
if inndel_b=2|inndel_b=1 then call hvanlig

return

hvanlig:
midtstokk=5/scale
p1=(bredde-midtstokk)/2
p2=p1+midtstokk


if inndel_b>1 then do
/*midtstokk*/
StartPolyline p1 0.02
EndLine p1 hoyde
StartPolyline p2 0.02
EndLine p2 hoyde
end

if inndel_b=1 then do
p1=(bredde-0.02)/2
p2=p1
end
mellom_mh=(hoyde-(midtstokk*2))/3

if inndel_h>1 then do
/*breddepinner*/
StartPolyline 0.02 mellom_mh
EndLine p1 mellom_mh
StartPolyline p2 mellom_mh
EndLine bredde mellom_mh

/* midtstokk*/
StartPolyline 0.02 mellom_mh+midtstokk
EndLine p1 mellom_mh+midtstokk
StartPolyline p2 mellom_mh+midtstokk
EndLine bredde mellom_mh+midtstokk

/* profil bredde*/
StartPolyline 0.02 mellom_mh/2
EndLine p1 mellom_mh/2
StartPolyline p2 mellom_mh/2
endLine bredde mellom_mh/2

/* hoyde profiler*/
StartPolyline ((bredde-midtstokk)/2)/2 0.02
endline ((bredde-midtstokk)/2)/2 ((hoyde-(midtstokk*2))/3)
tmp=((bredde-midtstokk)/2)/2
StartPolyline bredde-tmp 0.02
endline bredde-tmp ((hoyde-midtstokk*2)/3)

end
return


h3rut:
ant_pinner=inndel_b-1
mellom=(bredde-(midtstokk*ant_pinner)) / inndel_b
p1=0.02
p2=0.02
h1=0.02
h2=0.02

ant_pinner=inndel_h-1
mellom_h=(hoyde-(midtstokk*ant_pinner)) / 3

/*********************HOYDE PINNER*************************/
ruter=inndel_b

p1=0.02
p2=0.02

pp1=0.02


do until ruter=0
p1=p2+mellom
p2=p1+midtstokk
pp1=p1-(mellom/2)
 StartPolyline p1 0.02
 EndLine p1 hoyde
 if p2<bredde then do
 StartPolyline p2 0.02
 EndLine p2 hoyde
end
/* PROFILER I HOYDEN*/
 StartPolyline pp1 0.02
 EndLine pp1 (hoyde-(midtstokk*2))/3


ruter=ruter-1

ruter_h=inndel_h-1

if inndel_h>1 then do
 do until ruter_h=0
 ps=p1-mellom

 h1=h2+mellom_h
 h2=h1+midtstokk

 StartPolyline ps h1
 EndLine p1 h1

 StartPolyline ps h1/2
 EndLine p1 h1/2


 StartPolyline ps h2
 EndLine p1 h2

 ruter_h=ruter_h-1
 end
end
 h1=0.02
 h2=0.02

end
return

/*************************************************************************/

draw_o:

call draw_frame
ruter=inndel_h-1
midtstokk=5/scale

ant_pinner=inndel_b-1
mellom=(bredde-(midtstokk*ant_pinner)) / inndel_b
p1=0.02
p2=0.02
h1=0.02
h2=0.02

ant_pinner=inndel_h-1
mellom_h=(hoyde-(midtstokk*ant_pinner)) / 3

/*********************HOYDE PINNER*************************/
ruter=inndel_b

do until ruter=0
p1=p2+mellom
p2=p1+midtstokk

 StartPolyline p1 0.02
 EndLine p1 hoyde
 StartPolyline p2 0.02
 EndLine p2 hoyde
ruter=ruter-1

end

p1=0.02
p2=mellom_h
p3=mellom

StartPolyline p1 p2
EndLine p3 p2
StartPolyline p1 p2+midtstokk
EndLine p3 p2+midtstokk


DrawArc p3+midtstokk p2 mellom+midtstokk+(mellom/2) mellom_h-(12/50) mellom+midtstokk+mellom p2
DrawArc p3+midtstokk p2+midtstokk+(2/50) mellom+midtstokk+(mellom/2) mellom_h-(12/50)+midtstokk mellom+midtstokk+mellom p2+midtstokk+(2/50)


StartPolyline (p3+midtstokk)*2 p2
EndLine bredde p2
StartPolyline (p3+midtstokk)*2 p2+midtstokk
EndLine bredde p2+midtstokk


StartPolyline 0.02 mellom_h/2
EndLine mellom mellom_h/2


StartPolyline mellom/2 0.02
EndLine mellom/2 mellom_h


StartPolyline (mellom*2)+(midtstokk*2) mellom_h/2
EndLine (mellom*3)+(midtstokk*2) mellom_h/2


StartPolyline (mellom*3)+(midtstokk*2)-(mellom/2) 0.02
EndLine (mellom*3)+(midtstokk*2)-(mellom/2) mellom_h

return
/*************************************************************************/

draw_p:
call draw_frame

SetTextAdjustment 0
SetRigidTextFlag 1
SetSpecialTextFlag 1
SetFontSize 15
DrawText  0.1 0.5 tegn.
DrawText  0.1 0.9 ikke.
DrawText  0.1 1.3 tilgj.

return


draw_i:
call draw_frame
ant_pinner=inndel_b-1
midtstokk=5/scale
mellom=(bredde-(midtstokk*ant_pinner)) / inndel_b

p1=0.02
p2=0.02
h1=0.02
h2=0.02

ant_pinner=inndel_h-1
mellom_h=(hoyde-(midtstokk*ant_pinner)) / inndel_h

/*********************HOYDE PINNER*************************/
ruter=inndel_b

do until ruter=0
p1=p2+mellom
p2=p1+midtstokk

 StartPolyline p1 0.02
 EndLine p1 hoyde
 StartPolyline p2 0.02
 EndLine p2 hoyde
ruter=ruter-1

ruter_h=inndel_h-1

if inndel_h>1 then do
 do until ruter_h=0
 ps=p1-mellom

 h1=h2+mellom_h
 h2=h1+midtstokk

 StartPolyline ps h1
 EndLine p1 h1
 StartPolyline ps h2
 EndLine p1 h2

 ruter_h=ruter_h-1
 end
end
 h1=0.02
 h2=0.02

end
return

/*************************************************************************/
draw_b:
call draw_frame
ant_pinner=subtype
midtstokk=5/scale
mellom=(bredde-(midtstokk*ant_pinner)) / inndel_b

p1=0.02
p2=0.02
h1=0.02
h2=0.02

ant_pinner=inndel_h-1
/*mellom_h=(hoyde-(midtstokk*ant_pinner)) / inndel_h*/

mellom_h=hoyde / inndel_h

/*********************HOYDE PINNER*************************/

ruter=inndel_h-1
call draw_frame

midtstokk=5/scale


step=bredde-(midtstokk*subtype)
step=step / (subtype+1)
p1=step
p2=p1+midtstokk

subtype2=subtype
do until subtype2=0

/*midtstokk*/
p1=trunc(p1,3)
p2=trunc(p2,3)
StartPolyline p1 0.02
EndLine p1 hoyde
StartPolyline p2 0.02
EndLine p2 hoyde

p1=p2+step
p2=p1+midtstokk

subtype2=subtype2-1
end


if inndel_h>1 then do

/*breddepinner*/

mellom_b=bredde-(midtstokk*subtype)
mellom_b=mellom_b/(subtype+1)

p1=0.02
p2=mellom_b


ruter=inndel_h-1
timesb=subtype+1

do until ruter=0
p1=0.02
p2=mellom_b

 do until timesb=0
 StartPolyline p1 hoyde/inndel_h*ruter
 EndLine p2 hoyde/inndel_h*ruter
 p1=p2+midtstokk
 p2=p1+mellom_b
 timesb=timesb-1
 end
timesb=subtype+1
ruter=ruter-1
end

end

/*hoydepinner*/

antall_hpinne=inndel_b-(subtype+1)

if inndel_h>1 then do
inndel_pinner=antall_hpinne/(subtype+1)
end
if inndel_h=1 then do
inndel_pinner=antall_hpinne/(subtype+1)
end

mellom_b=bredde - (midtstokk*subtype)
mellom_b=mellom_b / (subtype+1)

step=mellom_b / (inndel_pinner+1)

p1=step

pinner=inndel_pinner

do until antall_hpinne<=0
 do until pinner<=0
 if p1<bredde then do
 StartPolyline p1 0.02
 EndLine p1 hoyde
 end
 p1=p1+step
 pinner=pinner-1
 end
p1=p1+step+midtstokk
pinner=inndel_pinner
antall_hpinne=antall_hpinne-1
end

return


/*************************************************************************/
draw_g:
call draw_frame
ant_pinner=subtype
midtstokk=5/scale
mellom=(bredde-(midtstokk*subtype)) / inndel_b


p1=0.02
p2=0.02
h1=0.02
h2=0.02

mellom_h=(hoyde-(midtstokk*subtype)) / inndel_h

mellom_h=hoyde / inndel_h

/*********************HOYDE PINNER*************************/
ruter=inndel_b

do until ruter=0
 p1=p2+mellom
 p2=p1+midtstokk
 StartPolyline p1 0.02
 EndLine p1 hoyde
  if p2<=bredde then do
   StartPolyline p2 0.02
   EndLine p2 hoyde
 end

ruter=ruter-1
ruter_h=inndel_h-1

if inndel_h>1 then do
  do until ruter_h=0
  ps=p1-mellom
  h1=h2+mellom_h
  h2=h1+0.02
  StartPolyline ps h1
  EndLine p1 h1
  ruter_h=ruter_h-1
  end
end


 h1=0.02
 h2=0.02

end
return



/*
ruter=inndel_h-1
call draw_frame

midtstokk=5/scale
p1=(bredde-midtstokk)/2
p2=p1+midtstokk


/*midtstokk*/
StartPolyline p1 0.02
EndLine p1 hoyde
StartPolyline p2 0.02
EndLine p2 hoyde

if inndel_h=1 then return

/*breddepinner*/
do until ruter=0
StartPolyline 0.02 hoyde/inndel_h*ruter
EndLine p1 hoyde/inndel_h*ruter
StartPolyline p2 hoyde/inndel_h*ruter
EndLine bredde hoyde/inndel_h*ruter
ruter=ruter-1
end
return
*/

/*************************************************************************/

draw_m:
ruter=inndel_h-1
call draw_frame

midtstokk=5/scale
p1=(bredde-midtstokk)/2
p2=p1+midtstokk


/*breddepinner*/
do until ruter=0
StartPolyline 0.02 hoyde/inndel_h*ruter
EndLine p1 hoyde/inndel_h*ruter
StartPolyline p2 hoyde/inndel_h*ruter
EndLine bredde hoyde/inndel_h*ruter
ruter=ruter-1
end

/*midtstokk*/
StartPolyline p1 buetopp
EndLine p1 hoyde
StartPolyline p2 buetopp
EndLine p2 hoyde

DrawArc 0.02 buehoyde bredde/2 buetopp bredde buehoyde

return

draw_k:
ruter=inndel_h-1

if inndel_h=1 then ruter=1

call draw_frame

midtstokk=5/scale
p1=(bredde-midtstokk)/2
p2=p1+midtstokk


if inndel_b>2 then return

/*breddepinner*/
do until ruter=0
StartPolyline 0.02 (hoyde/inndel_h)*ruter
EndLine p1 (hoyde/inndel_h)*ruter
StartPolyline p2 (hoyde/inndel_h)*ruter
EndLine bredde (hoyde/inndel_h)*ruter
ruter=ruter-1
end

/*midtstokk*/
StartPolyline p1 buehoyde
EndLine p1 hoyde
StartPolyline p2 buehoyde
EndLine p2 hoyde

DrawArc 0.02 buehoyde bredde/4 buetopp p1 buehoyde
DrawArc p2 buehoyde (bredde/4)*3 buetopp bredde buehoyde

return


draw_c:
ruter=inndel_h-1

if inndel_h=1 then ruter=1

call draw_frame
do until ruter=0
StartPolyline 0.02 hoyde/inndel_h*ruter
EndLine bredde hoyde/inndel_h*ruter
ruter=ruter-1
end

if inndel_b>1 then ruter=inndel_b-1
if inndel_b=1 then ruter=inndel_b


do until ruter=0
StartPolyline bredde/inndel_b*ruter buetopp
EndLine bredde/inndel_b*ruter hoyde
ruter=ruter-1
end
DrawArc 0.02 buehoyde bredde/2 buetopp bredde buehoyde
return

/*************************************************************************/


draw_e:
say draw_e
call draw_frame


ant_pinner=subtype
midtstokk=5/scale
mellom=(bredde-(midtstokk*ant_pinner)) / inndel_b

p1=0.02
p2=0.02
h1=0.02
h2=0.02

ant_pinner=inndel_h-1
/*mellom_h=(hoyde-(midtstokk*ant_pinner)) / inndel_h*/

mellom_h=hoyde / inndel_h

/*********************HOYDE PINNER*************************/

ruter=inndel_h-1
call draw_frame

midtstokk=5/scale


step=bredde-(midtstokk*subtype)
step=step / (subtype+1)
p1=step
p2=p1+midtstokk

subtype2=subtype
do until subtype2=0

/*midtstokk*/
p1=trunc(p1,3)
p2=trunc(p2,3)
StartPolyline p1 buehoyde
EndLine p1 hoyde
StartPolyline p2 buehoyde
EndLine p2 hoyde

p1=p2+step
p2=p1+midtstokk

subtype2=subtype2-1
end


if inndel_h>1 then do

/*breddepinner*/

mellom_b=bredde-(midtstokk*subtype)
mellom_b=mellom_b/(subtype+1)

p1=0.02
p2=mellom_b

ruter=inndel_h-1
timesb=subtype+1

do until ruter=0
p1=0.02
p2=mellom_b

 do until timesb=0
 StartPolyline p1 hoyde/inndel_h*ruter
 EndLine p2 hoyde/inndel_h*ruter
 p1=p2+midtstokk
 p2=p1+mellom_b
 timesb=timesb-1
 end
timesb=subtype+1
ruter=ruter-1
end

end

/*hoydepinner*/

antall_hpinne=inndel_b-(subtype+1)
say antall_hpinne
if inndel_h>1 then do
inndel_pinner=antall_hpinne/(subtype+1)
end
if inndel_h=1 then do
inndel_pinner=antall_hpinne/(subtype+1)
end

mellom_b=bredde - (midtstokk*subtype)
mellom_b=mellom_b / (subtype+1)

step=mellom_b / (inndel_pinner+1)

p1=step

pinner=inndel_pinner

do until antall_hpinne<=0
 do until pinner<=0
 if p1<bredde then do
 StartPolyline p1 buetopp
 EndLine p1 hoyde
 end
 p1=p1+step
 pinner=pinner-1
 end
p1=p1+step+midtstokk
pinner=inndel_pinner
antall_hpinne=antall_hpinne-1
end

antall_buer=subtype+1
if subtype=1 then antall_buer=2


p1=0.02
p2=p1+mellom_b

do until antall_buer=0
 DrawArc p1 buehoyde p1+(mellom_b/2) buetopp p2 buehoyde
 p1=p2+midtstokk
 p2=p1+mellom_b
 antall_buer=antall_buer-1
end


return


error:
say "ikke godtatt<br>"
exit


draw_frame:
SetLineWidth 1
DrawRectBox 0.02 0.02 bredde hoyde
SetLineWidth 1

return



